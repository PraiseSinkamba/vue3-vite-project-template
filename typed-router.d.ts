/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/(client)': RouteRecordInfo<'/(client)', '/', Record<never, never>, Record<never, never>, '/(client)/(homepage)' | '/(client)/booking' | '/(client)/loyalty' | '/(client)/portfolio' | '/(client)/service/[id]' | '/(client)/service/i18n/service-detail'>,
    '/(client)/(homepage)': RouteRecordInfo<'/(client)/(homepage)', '/', Record<never, never>, Record<never, never>>,
    '/(client)/booking': RouteRecordInfo<'/(client)/booking', '/booking', Record<never, never>, Record<never, never>>,
    '/(client)/loyalty': RouteRecordInfo<'/(client)/loyalty', '/loyalty', Record<never, never>, Record<never, never>>,
    '/(client)/portfolio': RouteRecordInfo<'/(client)/portfolio', '/portfolio', Record<never, never>, Record<never, never>>,
    '/(client)/service/[id]': RouteRecordInfo<'/(client)/service/[id]', '/service/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/(client)/service/i18n/service-detail': RouteRecordInfo<'/(client)/service/i18n/service-detail', '/service/i18n/service-detail', Record<never, never>, Record<never, never>>,
    '/admin': RouteRecordInfo<'/admin', '/admin', Record<never, never>, Record<never, never>, '/admin/' | '/admin/appointments/(appointments)' | '/admin/clients/(client-manager)' | '/admin/clients/[id]' | '/admin/file-demo/' | '/admin/file-demo/advanced' | '/admin/gallery/(gallery)' | '/admin/inventory/(inventory-manager)' | '/admin/inventory/[id]/edit' | '/admin/inventory/[id]/view' | '/admin/inventory/new' | '/admin/reports/(reports)' | '/admin/services/(services)' | '/admin/services/[id]/edit' | '/admin/services/new' | '/admin/settings/(settings)'>,
    '/admin/': RouteRecordInfo<'/admin/', '/admin', Record<never, never>, Record<never, never>>,
    '/admin/appointments/(appointments)': RouteRecordInfo<'/admin/appointments/(appointments)', '/admin/appointments', Record<never, never>, Record<never, never>>,
    '/admin/clients/(client-manager)': RouteRecordInfo<'/admin/clients/(client-manager)', '/admin/clients', Record<never, never>, Record<never, never>>,
    '/admin/clients/[id]': RouteRecordInfo<'/admin/clients/[id]', '/admin/clients/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/admin/file-demo/': RouteRecordInfo<'/admin/file-demo/', '/admin/file-demo', Record<never, never>, Record<never, never>>,
    '/admin/file-demo/advanced': RouteRecordInfo<'/admin/file-demo/advanced', '/admin/file-demo/advanced', Record<never, never>, Record<never, never>>,
    '/admin/gallery/(gallery)': RouteRecordInfo<'/admin/gallery/(gallery)', '/admin/gallery', Record<never, never>, Record<never, never>>,
    '/admin/inventory/(inventory-manager)': RouteRecordInfo<'/admin/inventory/(inventory-manager)', '/admin/inventory', Record<never, never>, Record<never, never>>,
    '/admin/inventory/[id]/edit': RouteRecordInfo<'/admin/inventory/[id]/edit', '/admin/inventory/:id/edit', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/admin/inventory/[id]/view': RouteRecordInfo<'/admin/inventory/[id]/view', '/admin/inventory/:id/view', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/admin/inventory/new': RouteRecordInfo<'/admin/inventory/new', '/admin/inventory/new', Record<never, never>, Record<never, never>>,
    '/admin/reports/(reports)': RouteRecordInfo<'/admin/reports/(reports)', '/admin/reports', Record<never, never>, Record<never, never>>,
    '/admin/services/(services)': RouteRecordInfo<'/admin/services/(services)', '/admin/services', Record<never, never>, Record<never, never>>,
    '/admin/services/[id]/edit': RouteRecordInfo<'/admin/services/[id]/edit', '/admin/services/:id/edit', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/admin/services/new': RouteRecordInfo<'/admin/services/new', '/admin/services/new', Record<never, never>, Record<never, never>>,
    '/admin/settings/(settings)': RouteRecordInfo<'/admin/settings/(settings)', '/admin/settings', Record<never, never>, Record<never, never>>,
    '/auth/admin-signin': RouteRecordInfo<'/auth/admin-signin', '/auth/admin-signin', Record<never, never>, Record<never, never>>,
    '/auth/signin': RouteRecordInfo<'/auth/signin', '/auth/signin', Record<never, never>, Record<never, never>>,
    '/auth/signup': RouteRecordInfo<'/auth/signup', '/auth/signup', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/(client).vue': {
      routes: '/(client)' | '/(client)/(homepage)' | '/(client)/service/[id]' | '/(client)/booking' | '/(client)/service/i18n' | '/(client)/loyalty' | '/(client)/portfolio' | '/(client)/service' | '/(client)/service/i18n/service-detail'
      views: 'default'
    }
    'src/pages/(client)/(homepage).vue': {
      routes: '/(client)/(homepage)'
      views: never
    }
    'src/pages/(client)/booking.vue': {
      routes: '/(client)/booking'
      views: never
    }
    'src/pages/(client)/loyalty.vue': {
      routes: '/(client)/loyalty'
      views: never
    }
    'src/pages/(client)/portfolio.vue': {
      routes: '/(client)/portfolio'
      views: never
    }
    'src/pages/(client)/service/[id].vue': {
      routes: '/(client)/service/[id]'
      views: never
    }
    'src/pages/(client)/service/i18n/service-detail.ts': {
      routes: '/(client)/service/i18n/service-detail'
      views: never
    }
    'src/pages/admin.vue': {
      routes: '/admin' | '/admin/' | '/admin/appointments/(appointments)' | '/admin/clients/(client-manager)' | '/admin/file-demo/' | '/admin/gallery/(gallery)' | '/admin/services/(services)' | '/admin/inventory/(inventory-manager)' | '/admin/reports/(reports)' | '/admin/settings/(settings)' | '/admin/clients/[id]' | '/admin/services/[id]' | '/admin/inventory/[id]' | '/admin/file-demo/advanced' | '/admin/appointments' | '/admin/clients' | '/admin/services/[id]/edit' | '/admin/inventory/[id]/edit' | '/admin/file-demo' | '/admin/gallery' | '/admin/inventory' | '/admin/services/new' | '/admin/inventory/new' | '/admin/reports' | '/admin/services' | '/admin/settings' | '/admin/inventory/[id]/view'
      views: 'default'
    }
    'src/pages/admin/index.vue': {
      routes: '/admin/'
      views: never
    }
    'src/pages/admin/appointments/(appointments).vue': {
      routes: '/admin/appointments/(appointments)'
      views: never
    }
    'src/pages/admin/clients/(client-manager).vue': {
      routes: '/admin/clients/(client-manager)'
      views: never
    }
    'src/pages/admin/clients/[id].vue': {
      routes: '/admin/clients/[id]'
      views: never
    }
    'src/pages/admin/file-demo/index.vue': {
      routes: '/admin/file-demo/'
      views: never
    }
    'src/pages/admin/file-demo/advanced.vue': {
      routes: '/admin/file-demo/advanced'
      views: never
    }
    'src/pages/admin/gallery/(gallery).vue': {
      routes: '/admin/gallery/(gallery)'
      views: never
    }
    'src/pages/admin/inventory/(inventory-manager).vue': {
      routes: '/admin/inventory/(inventory-manager)'
      views: never
    }
    'src/pages/admin/inventory/[id]/edit.vue': {
      routes: '/admin/inventory/[id]/edit'
      views: never
    }
    'src/pages/admin/inventory/[id]/view.vue': {
      routes: '/admin/inventory/[id]/view'
      views: never
    }
    'src/pages/admin/inventory/new.vue': {
      routes: '/admin/inventory/new'
      views: never
    }
    'src/pages/admin/reports/(reports).vue': {
      routes: '/admin/reports/(reports)'
      views: never
    }
    'src/pages/admin/services/(services).vue': {
      routes: '/admin/services/(services)'
      views: never
    }
    'src/pages/admin/services/[id]/edit.vue': {
      routes: '/admin/services/[id]/edit'
      views: never
    }
    'src/pages/admin/services/new.vue': {
      routes: '/admin/services/new'
      views: never
    }
    'src/pages/admin/settings/(settings).vue': {
      routes: '/admin/settings/(settings)'
      views: never
    }
    'src/pages/auth/admin-signin.vue': {
      routes: '/auth/admin-signin'
      views: never
    }
    'src/pages/auth/signin.vue': {
      routes: '/auth/signin'
      views: never
    }
    'src/pages/auth/signup.vue': {
      routes: '/auth/signup'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
